// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Declarations.proto

#ifndef PROTOBUF_Declarations_2eproto__INCLUDED
#define PROTOBUF_Declarations_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DataType.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Declarations_2eproto();
void protobuf_AssignDesc_Declarations_2eproto();
void protobuf_ShutdownFile_Declarations_2eproto();

class VertexDeclaration;
class VertexDeclaration_VertexAttrib;

// ===================================================================

class VertexDeclaration_VertexAttrib : public ::google::protobuf::Message {
 public:
  VertexDeclaration_VertexAttrib();
  virtual ~VertexDeclaration_VertexAttrib();

  VertexDeclaration_VertexAttrib(const VertexDeclaration_VertexAttrib& from);

  inline VertexDeclaration_VertexAttrib& operator=(const VertexDeclaration_VertexAttrib& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VertexDeclaration_VertexAttrib& default_instance();

  void Swap(VertexDeclaration_VertexAttrib* other);

  // implements Message ----------------------------------------------

  VertexDeclaration_VertexAttrib* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VertexDeclaration_VertexAttrib& from);
  void MergeFrom(const VertexDeclaration_VertexAttrib& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protobuf.DataType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::protobuf::DataType& type() const;
  inline ::protobuf::DataType* mutable_type();
  inline ::protobuf::DataType* release_type();
  inline void set_allocated_type(::protobuf::DataType* type);

  // required uint32 attrib_id = 2;
  inline bool has_attrib_id() const;
  inline void clear_attrib_id();
  static const int kAttribIdFieldNumber = 2;
  inline ::google::protobuf::uint32 attrib_id() const;
  inline void set_attrib_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protobuf.VertexDeclaration.VertexAttrib)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_attrib_id();
  inline void clear_has_attrib_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protobuf::DataType* type_;
  ::google::protobuf::uint32 attrib_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Declarations_2eproto();
  friend void protobuf_AssignDesc_Declarations_2eproto();
  friend void protobuf_ShutdownFile_Declarations_2eproto();

  void InitAsDefaultInstance();
  static VertexDeclaration_VertexAttrib* default_instance_;
};
// -------------------------------------------------------------------

class VertexDeclaration : public ::google::protobuf::Message {
 public:
  VertexDeclaration();
  virtual ~VertexDeclaration();

  VertexDeclaration(const VertexDeclaration& from);

  inline VertexDeclaration& operator=(const VertexDeclaration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VertexDeclaration& default_instance();

  void Swap(VertexDeclaration* other);

  // implements Message ----------------------------------------------

  VertexDeclaration* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VertexDeclaration& from);
  void MergeFrom(const VertexDeclaration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef VertexDeclaration_VertexAttrib VertexAttrib;

  // accessors -------------------------------------------------------

  // repeated .protobuf.VertexDeclaration.VertexAttrib attributes = 1;
  inline int attributes_size() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  inline const ::protobuf::VertexDeclaration_VertexAttrib& attributes(int index) const;
  inline ::protobuf::VertexDeclaration_VertexAttrib* mutable_attributes(int index);
  inline ::protobuf::VertexDeclaration_VertexAttrib* add_attributes();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::VertexDeclaration_VertexAttrib >&
      attributes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::VertexDeclaration_VertexAttrib >*
      mutable_attributes();

  // @@protoc_insertion_point(class_scope:protobuf.VertexDeclaration)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protobuf::VertexDeclaration_VertexAttrib > attributes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Declarations_2eproto();
  friend void protobuf_AssignDesc_Declarations_2eproto();
  friend void protobuf_ShutdownFile_Declarations_2eproto();

  void InitAsDefaultInstance();
  static VertexDeclaration* default_instance_;
};
// ===================================================================


// ===================================================================

// VertexDeclaration_VertexAttrib

// required .protobuf.DataType type = 1;
inline bool VertexDeclaration_VertexAttrib::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VertexDeclaration_VertexAttrib::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VertexDeclaration_VertexAttrib::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VertexDeclaration_VertexAttrib::clear_type() {
  if (type_ != NULL) type_->::protobuf::DataType::Clear();
  clear_has_type();
}
inline const ::protobuf::DataType& VertexDeclaration_VertexAttrib::type() const {
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
inline ::protobuf::DataType* VertexDeclaration_VertexAttrib::mutable_type() {
  set_has_type();
  if (type_ == NULL) type_ = new ::protobuf::DataType;
  return type_;
}
inline ::protobuf::DataType* VertexDeclaration_VertexAttrib::release_type() {
  clear_has_type();
  ::protobuf::DataType* temp = type_;
  type_ = NULL;
  return temp;
}
inline void VertexDeclaration_VertexAttrib::set_allocated_type(::protobuf::DataType* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
}

// required uint32 attrib_id = 2;
inline bool VertexDeclaration_VertexAttrib::has_attrib_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VertexDeclaration_VertexAttrib::set_has_attrib_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VertexDeclaration_VertexAttrib::clear_has_attrib_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VertexDeclaration_VertexAttrib::clear_attrib_id() {
  attrib_id_ = 0u;
  clear_has_attrib_id();
}
inline ::google::protobuf::uint32 VertexDeclaration_VertexAttrib::attrib_id() const {
  return attrib_id_;
}
inline void VertexDeclaration_VertexAttrib::set_attrib_id(::google::protobuf::uint32 value) {
  set_has_attrib_id();
  attrib_id_ = value;
}

// -------------------------------------------------------------------

// VertexDeclaration

// repeated .protobuf.VertexDeclaration.VertexAttrib attributes = 1;
inline int VertexDeclaration::attributes_size() const {
  return attributes_.size();
}
inline void VertexDeclaration::clear_attributes() {
  attributes_.Clear();
}
inline const ::protobuf::VertexDeclaration_VertexAttrib& VertexDeclaration::attributes(int index) const {
  return attributes_.Get(index);
}
inline ::protobuf::VertexDeclaration_VertexAttrib* VertexDeclaration::mutable_attributes(int index) {
  return attributes_.Mutable(index);
}
inline ::protobuf::VertexDeclaration_VertexAttrib* VertexDeclaration::add_attributes() {
  return attributes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::VertexDeclaration_VertexAttrib >&
VertexDeclaration::attributes() const {
  return attributes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::VertexDeclaration_VertexAttrib >*
VertexDeclaration::mutable_attributes() {
  return &attributes_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Declarations_2eproto__INCLUDED

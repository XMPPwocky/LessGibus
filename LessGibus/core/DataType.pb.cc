// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataType.proto

#include "stdafx.h"

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267)
#endif
#include "DataType.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* DataType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DataType_Format_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DataType_Interpretation_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_DataType_2eproto() {
  protobuf_AddDesc_DataType_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DataType.proto");
  GOOGLE_CHECK(file != NULL);
  DataType_descriptor_ = file->message_type(0);
  static const int DataType_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, interpretation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, repeats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, name_),
  };
  DataType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataType_descriptor_,
      DataType::default_instance_,
      DataType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataType));
  DataType_Format_descriptor_ = DataType_descriptor_->enum_type(0);
  DataType_Interpretation_descriptor_ = DataType_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DataType_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataType_descriptor_, &DataType::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DataType_2eproto() {
  delete DataType::default_instance_;
  delete DataType_reflection_;
}

void protobuf_AddDesc_DataType_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016DataType.proto\022\010protobuf\"\201\004\n\010DataType\022"
    ")\n\006format\030\001 \002(\0162\031.protobuf.DataType.Form"
    "at\0229\n\016interpretation\030\002 \002(\0162!.protobuf.Da"
    "taType.Interpretation\022\017\n\007repeats\030\003 \002(\r\022\014"
    "\n\004name\030\005 \001(\t\"\205\002\n\006Format\022\037\n\033FORMAT_HALF_P"
    "RECISION_FLOAT\020\001\022!\n\035FORMAT_SINGLE_PRECIS"
    "ION_FLOAT\020\002\022!\n\035FORMAT_DOUBLE_PRECISION_F"
    "LOAT\020\003\022\026\n\022FORMAT_SIGNED_BYTE\020\004\022\030\n\024FORMAT"
    "_UNSIGNED_BYTE\020\005\022\027\n\023FORMAT_SIGNED_SHORT\020"
    "\006\022\031\n\025FORMAT_UNSIGNED_SHORT\020\007\022\025\n\021FORMAT_S"
    "IGNED_INT\020\010\022\027\n\023FORMAT_UNSIGNED_INT\020\t\"h\n\016"
    "Interpretation\022\023\n\017INTERPRET_FLOAT\020\001\022\030\n\024I"
    "NTERPRET_NORM_FLOAT\020\002\022\021\n\rINTERPRET_INT\020\003"
    "\022\024\n\020INTERPRET_DOUBLE\020\004", 542);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DataType.proto", &protobuf_RegisterTypes);
  DataType::default_instance_ = new DataType();
  DataType::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DataType_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DataType_2eproto {
  StaticDescriptorInitializer_DataType_2eproto() {
    protobuf_AddDesc_DataType_2eproto();
  }
} static_descriptor_initializer_DataType_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* DataType_Format_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_Format_descriptor_;
}
bool DataType_Format_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const DataType_Format DataType::FORMAT_HALF_PRECISION_FLOAT;
const DataType_Format DataType::FORMAT_SINGLE_PRECISION_FLOAT;
const DataType_Format DataType::FORMAT_DOUBLE_PRECISION_FLOAT;
const DataType_Format DataType::FORMAT_SIGNED_BYTE;
const DataType_Format DataType::FORMAT_UNSIGNED_BYTE;
const DataType_Format DataType::FORMAT_SIGNED_SHORT;
const DataType_Format DataType::FORMAT_UNSIGNED_SHORT;
const DataType_Format DataType::FORMAT_SIGNED_INT;
const DataType_Format DataType::FORMAT_UNSIGNED_INT;
const DataType_Format DataType::Format_MIN;
const DataType_Format DataType::Format_MAX;
const int DataType::Format_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* DataType_Interpretation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_Interpretation_descriptor_;
}
bool DataType_Interpretation_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const DataType_Interpretation DataType::INTERPRET_FLOAT;
const DataType_Interpretation DataType::INTERPRET_NORM_FLOAT;
const DataType_Interpretation DataType::INTERPRET_INT;
const DataType_Interpretation DataType::INTERPRET_DOUBLE;
const DataType_Interpretation DataType::Interpretation_MIN;
const DataType_Interpretation DataType::Interpretation_MAX;
const int DataType::Interpretation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int DataType::kFormatFieldNumber;
const int DataType::kInterpretationFieldNumber;
const int DataType::kRepeatsFieldNumber;
const int DataType::kNameFieldNumber;
#endif  // !_MSC_VER

DataType::DataType()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataType::InitAsDefaultInstance() {
}

DataType::DataType(const DataType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataType::SharedCtor() {
  _cached_size_ = 0;
  format_ = 1;
  interpretation_ = 1;
  repeats_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataType::~DataType() {
  SharedDtor();
}

void DataType::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DataType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_descriptor_;
}

const DataType& DataType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DataType_2eproto();
  return *default_instance_;
}

DataType* DataType::default_instance_ = NULL;

DataType* DataType::New() const {
  return new DataType;
}

void DataType::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    format_ = 1;
    interpretation_ = 1;
    repeats_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.DataType.Format format = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::DataType_Format_IsValid(value)) {
            set_format(static_cast< ::protobuf::DataType_Format >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_interpretation;
        break;
      }

      // required .protobuf.DataType.Interpretation interpretation = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_interpretation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::DataType_Interpretation_IsValid(value)) {
            set_interpretation(static_cast< ::protobuf::DataType_Interpretation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_repeats;
        break;
      }

      // required uint32 repeats = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_repeats:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &repeats_)));
          set_has_repeats();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.DataType.Format format = 1;
  if (has_format()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->format(), output);
  }

  // required .protobuf.DataType.Interpretation interpretation = 2;
  if (has_interpretation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->interpretation(), output);
  }

  // required uint32 repeats = 3;
  if (has_repeats()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->repeats(), output);
  }

  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.DataType.Format format = 1;
  if (has_format()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->format(), target);
  }

  // required .protobuf.DataType.Interpretation interpretation = 2;
  if (has_interpretation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->interpretation(), target);
  }

  // required uint32 repeats = 3;
  if (has_repeats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->repeats(), target);
  }

  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.DataType.Format format = 1;
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
    }

    // required .protobuf.DataType.Interpretation interpretation = 2;
    if (has_interpretation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->interpretation());
    }

    // required uint32 repeats = 3;
    if (has_repeats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->repeats());
    }

    // optional string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataType::MergeFrom(const DataType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_format()) {
      set_format(from.format());
    }
    if (from.has_interpretation()) {
      set_interpretation(from.interpretation());
    }
    if (from.has_repeats()) {
      set_repeats(from.repeats());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataType::CopyFrom(const DataType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DataType::Swap(DataType* other) {
  if (other != this) {
    std::swap(format_, other->format_);
    std::swap(interpretation_, other->interpretation_);
    std::swap(repeats_, other->repeats_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataType_descriptor_;
  metadata.reflection = DataType_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)
#ifdef _MSC_VER
#  pragma warning(pop)
#endif
